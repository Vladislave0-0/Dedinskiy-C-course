digraph tree
{
	rankdir = TB;
	splines = false;

	node_0x604000000590 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000590}| {type: OP | value = +} | {<f2>0x6040000005d0 | <f3> 0x604000000610}}"];
	node_0x604000000590:<f2>:s -> node_0x6040000005d0:<f1>:n;
	node_0x604000000590:<f3>:s -> node_0x604000000610:<f1>:n;
	node_0x6040000005d0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x6040000005d0}| {type: OP | value = *} | {<f2>0x604000000650 | <f3> 0x604000000690}}"];
	node_0x6040000005d0:<f2>:s -> node_0x604000000650:<f1>:n;
	node_0x6040000005d0:<f3>:s -> node_0x604000000690:<f1>:n;
	node_0x604000000650 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000650}| {type: OP | value = *} | {<f2>0x604000000750 | <f3> 0x604000000790}}"];
	node_0x604000000650:<f2>:s -> node_0x604000000750:<f1>:n;
	node_0x604000000650:<f3>:s -> node_0x604000000790:<f1>:n;
	node_0x604000000750 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000750}| {type: OP | value = *} | {<f2>0x604000000d50 | <f3> 0x604000000d90}}"];
	node_0x604000000750:<f2>:s -> node_0x604000000d50:<f1>:n;
	node_0x604000000750:<f3>:s -> node_0x604000000d90:<f1>:n;
	node_0x604000000d50 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000000d50}| {type: NUM | value = -1.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000d90 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000000d90}| {type: FUNC | value = sin} | {<f2>(nil) | <f3> 0x604000000dd0}}"];
	node_0x604000000d90:<f3>:s -> node_0x604000000dd0:<f1>:n;
	node_0x604000000dd0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000dd0}| {type: OP | value = +} | {<f2>0x604000000e10 | <f3> 0x604000000e50}}"];
	node_0x604000000dd0:<f2>:s -> node_0x604000000e10:<f1>:n;
	node_0x604000000dd0:<f3>:s -> node_0x604000000e50:<f1>:n;
	node_0x604000000e10 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000000e10}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000e50 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000e50}| {type: OP | value = *} | {<f2>0x604000000e90 | <f3> 0x604000000ed0}}"];
	node_0x604000000e50:<f2>:s -> node_0x604000000e90:<f1>:n;
	node_0x604000000e50:<f3>:s -> node_0x604000000ed0:<f1>:n;
	node_0x604000000e90 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000000e90}| {type: NUM | value = -50.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000ed0 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000000ed0}| {type: FUNC | value = sin} | {<f2>(nil) | <f3> 0x604000000f10}}"];
	node_0x604000000ed0:<f3>:s -> node_0x604000000f10:<f1>:n;
	node_0x604000000f10 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000f10}| {type: OP | value = *} | {<f2>0x604000000f50 | <f3> 0x604000000f90}}"];
	node_0x604000000f10:<f2>:s -> node_0x604000000f50:<f1>:n;
	node_0x604000000f10:<f3>:s -> node_0x604000000f90:<f1>:n;
	node_0x604000000f50 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000000f50}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000f90 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000000f90}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000790 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000790}| {type: OP | value = +} | {<f2>0x6040000007d0 | <f3> 0x604000000890}}"];
	node_0x604000000790:<f2>:s -> node_0x6040000007d0:<f1>:n;
	node_0x604000000790:<f3>:s -> node_0x604000000890:<f1>:n;
	node_0x6040000007d0 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x6040000007d0}| {type: NUM | value = 1.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000890 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000890}| {type: OP | value = *} | {<f2>0x604000000950 | <f3> 0x604000000990}}"];
	node_0x604000000890:<f2>:s -> node_0x604000000950:<f1>:n;
	node_0x604000000890:<f3>:s -> node_0x604000000990:<f1>:n;
	node_0x604000000950 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000950}| {type: OP | value = *} | {<f2>0x604000000a90 | <f3> 0x604000000c50}}"];
	node_0x604000000950:<f2>:s -> node_0x604000000a90:<f1>:n;
	node_0x604000000950:<f3>:s -> node_0x604000000c50:<f1>:n;
	node_0x604000000a90 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000000a90}| {type: FUNC | value = cos} | {<f2>(nil) | <f3> 0x604000000c90}}"];
	node_0x604000000a90:<f3>:s -> node_0x604000000c90:<f1>:n;
	node_0x604000000c90 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000c90}| {type: OP | value = *} | {<f2>0x604000000cd0 | <f3> 0x604000000d10}}"];
	node_0x604000000c90:<f2>:s -> node_0x604000000cd0:<f1>:n;
	node_0x604000000c90:<f3>:s -> node_0x604000000d10:<f1>:n;
	node_0x604000000cd0 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000000cd0}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000d10 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000000d10}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000c50 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000000c50}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000990 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000000990}| {type: NUM | value = -50.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000690 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000000690}| {type: FUNC | value = cos} | {<f2>(nil) | <f3> 0x604000000fd0}}"];
	node_0x604000000690:<f3>:s -> node_0x604000000fd0:<f1>:n;
	node_0x604000000fd0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000fd0}| {type: OP | value = +} | {<f2>0x604000001010 | <f3> 0x604000001050}}"];
	node_0x604000000fd0:<f2>:s -> node_0x604000001010:<f1>:n;
	node_0x604000000fd0:<f3>:s -> node_0x604000001050:<f1>:n;
	node_0x604000001010 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001010}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001050 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001050}| {type: OP | value = *} | {<f2>0x604000001090 | <f3> 0x6040000010d0}}"];
	node_0x604000001050:<f2>:s -> node_0x604000001090:<f1>:n;
	node_0x604000001050:<f3>:s -> node_0x6040000010d0:<f1>:n;
	node_0x604000001090 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000001090}| {type: NUM | value = -50.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x6040000010d0 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x6040000010d0}| {type: FUNC | value = sin} | {<f2>(nil) | <f3> 0x604000001110}}"];
	node_0x6040000010d0:<f3>:s -> node_0x604000001110:<f1>:n;
	node_0x604000001110 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001110}| {type: OP | value = *} | {<f2>0x604000001150 | <f3> 0x604000001190}}"];
	node_0x604000001110:<f2>:s -> node_0x604000001150:<f1>:n;
	node_0x604000001110:<f3>:s -> node_0x604000001190:<f1>:n;
	node_0x604000001150 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001150}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001190 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001190}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000610 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000000610}| {type: OP | value = *} | {<f2>0x6040000006d0 | <f3> 0x604000000710}}"];
	node_0x604000000610:<f2>:s -> node_0x6040000006d0:<f1>:n;
	node_0x604000000610:<f3>:s -> node_0x604000000710:<f1>:n;
	node_0x6040000006d0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x6040000006d0}| {type: OP | value = *} | {<f2>0x6040000011d0 | <f3> 0x604000001210}}"];
	node_0x6040000006d0:<f2>:s -> node_0x6040000011d0:<f1>:n;
	node_0x6040000006d0:<f3>:s -> node_0x604000001210:<f1>:n;
	node_0x6040000011d0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x6040000011d0}| {type: OP | value = *} | {<f2>0x6040000017d0 | <f3> 0x604000001810}}"];
	node_0x6040000011d0:<f2>:s -> node_0x6040000017d0:<f1>:n;
	node_0x6040000011d0:<f3>:s -> node_0x604000001810:<f1>:n;
	node_0x6040000017d0 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x6040000017d0}| {type: NUM | value = -1.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001810 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000001810}| {type: FUNC | value = sin} | {<f2>(nil) | <f3> 0x604000001850}}"];
	node_0x604000001810:<f3>:s -> node_0x604000001850:<f1>:n;
	node_0x604000001850 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001850}| {type: OP | value = +} | {<f2>0x604000001890 | <f3> 0x6040000018d0}}"];
	node_0x604000001850:<f2>:s -> node_0x604000001890:<f1>:n;
	node_0x604000001850:<f3>:s -> node_0x6040000018d0:<f1>:n;
	node_0x604000001890 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001890}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x6040000018d0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x6040000018d0}| {type: OP | value = *} | {<f2>0x604000001910 | <f3> 0x604000001950}}"];
	node_0x6040000018d0:<f2>:s -> node_0x604000001910:<f1>:n;
	node_0x6040000018d0:<f3>:s -> node_0x604000001950:<f1>:n;
	node_0x604000001910 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000001910}| {type: NUM | value = -50.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001950 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000001950}| {type: FUNC | value = sin} | {<f2>(nil) | <f3> 0x604000001990}}"];
	node_0x604000001950:<f3>:s -> node_0x604000001990:<f1>:n;
	node_0x604000001990 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001990}| {type: OP | value = *} | {<f2>0x6040000019d0 | <f3> 0x604000001a10}}"];
	node_0x604000001990:<f2>:s -> node_0x6040000019d0:<f1>:n;
	node_0x604000001990:<f3>:s -> node_0x604000001a10:<f1>:n;
	node_0x6040000019d0 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x6040000019d0}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001a10 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001a10}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001210 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001210}| {type: OP | value = +} | {<f2>0x604000001250 | <f3> 0x604000001310}}"];
	node_0x604000001210:<f2>:s -> node_0x604000001250:<f1>:n;
	node_0x604000001210:<f3>:s -> node_0x604000001310:<f1>:n;
	node_0x604000001250 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000001250}| {type: NUM | value = 1.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001310 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001310}| {type: OP | value = *} | {<f2>0x6040000013d0 | <f3> 0x604000001410}}"];
	node_0x604000001310:<f2>:s -> node_0x6040000013d0:<f1>:n;
	node_0x604000001310:<f3>:s -> node_0x604000001410:<f1>:n;
	node_0x6040000013d0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x6040000013d0}| {type: OP | value = *} | {<f2>0x604000001510 | <f3> 0x6040000016d0}}"];
	node_0x6040000013d0:<f2>:s -> node_0x604000001510:<f1>:n;
	node_0x6040000013d0:<f3>:s -> node_0x6040000016d0:<f1>:n;
	node_0x604000001510 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000001510}| {type: FUNC | value = cos} | {<f2>(nil) | <f3> 0x604000001710}}"];
	node_0x604000001510:<f3>:s -> node_0x604000001710:<f1>:n;
	node_0x604000001710 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001710}| {type: OP | value = *} | {<f2>0x604000001750 | <f3> 0x604000001790}}"];
	node_0x604000001710:<f2>:s -> node_0x604000001750:<f1>:n;
	node_0x604000001710:<f3>:s -> node_0x604000001790:<f1>:n;
	node_0x604000001750 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001750}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001790 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001790}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x6040000016d0 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x6040000016d0}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001410 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000001410}| {type: NUM | value = -50.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000000710 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000000710}| {type: FUNC | value = cos} | {<f2>(nil) | <f3> 0x604000001a50}}"];
	node_0x604000000710:<f3>:s -> node_0x604000001a50:<f1>:n;
	node_0x604000001a50 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001a50}| {type: OP | value = +} | {<f2>0x604000001a90 | <f3> 0x604000001ad0}}"];
	node_0x604000001a50:<f2>:s -> node_0x604000001a90:<f1>:n;
	node_0x604000001a50:<f3>:s -> node_0x604000001ad0:<f1>:n;
	node_0x604000001a90 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001a90}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001ad0 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001ad0}| {type: OP | value = *} | {<f2>0x604000001b10 | <f3> 0x604000001b50}}"];
	node_0x604000001ad0:<f2>:s -> node_0x604000001b10:<f1>:n;
	node_0x604000001ad0:<f3>:s -> node_0x604000001b50:<f1>:n;
	node_0x604000001b10 [style = "filled", fillcolor = skyblue, shape = Mrecord, label = "{{<f1> 0x604000001b10}| {type: NUM | value = -50.000000} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001b50 [style = "filled", fillcolor = green, shape = Mrecord, label = "{{<f1> 0x604000001b50}| {type: FUNC | value = sin} | {<f2>(nil) | <f3> 0x604000001b90}}"];
	node_0x604000001b50:<f3>:s -> node_0x604000001b90:<f1>:n;
	node_0x604000001b90 [style = "filled", fillcolor = yellow, shape = Mrecord, label = "{{<f1> 0x604000001b90}| {type: OP | value = *} | {<f2>0x604000001bd0 | <f3> 0x604000001c10}}"];
	node_0x604000001b90:<f2>:s -> node_0x604000001bd0:<f1>:n;
	node_0x604000001b90:<f3>:s -> node_0x604000001c10:<f1>:n;
	node_0x604000001bd0 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001bd0}| {type: VAR | value = y} | {<f2>(nil) | <f3> (nil)}}"];
	node_0x604000001c10 [style = "filled", fillcolor = red, shape = Mrecord, label = "{{<f1> 0x604000001c10}| {type: VAR | value = x} | {<f2>(nil) | <f3> (nil)}}"];
}

